from typing import Any
import polars as pl

dataset_schema = pl.Schema({
  "match_id": pl.Int64,
  "account_id": pl.List(pl.Float64),
  "creeps_stacked": pl.List(pl.Float64),
  "camps_stacked": pl.List(pl.Float64),
  "rune_pickups": pl.List(pl.Float64),
  "firstblood_claimed": pl.List(pl.Float64),
  "towers_killed": pl.List(pl.Float64),
  "roshans_killed": pl.List(pl.Float64),
  "stuns": pl.List(pl.Float64),
  "gold_t": pl.List(pl.String),
  "lh_t": pl.List(pl.String),
  "dn_t": pl.List(pl.String),
  "xp_t": pl.List(pl.String),
  "item_0": pl.List(pl.Int64),
  "item_1": pl.List(pl.Int64),
  "item_2": pl.List(pl.Int64),
  "item_3": pl.List(pl.Int64),
  "item_4": pl.List(pl.Int64),
  "item_5": pl.List(pl.Int64),
  "backpack_0": pl.List(pl.Int64),
  "backpack_1": pl.List(pl.Int64),
  "backpack_2": pl.List(pl.Int64),
  "item_neutral": pl.List(pl.Int64),
  "kills": pl.List(pl.Int64),
  "deaths": pl.List(pl.Int64),
  "assists": pl.List(pl.Int64),
  "last_hits": pl.List(pl.Int64),
  "denies": pl.List(pl.Int64),
  "gold_per_min": pl.List(pl.Int64),
  "xp_per_min": pl.List(pl.Int64),
  "level": pl.List(pl.Int64),
  "net_worth": pl.List(pl.Int64),
  "hero_damage": pl.List(pl.Int64),
  "tower_damage": pl.List(pl.Int64),
  "hero_healing": pl.List(pl.Int64),
  "total_gold": pl.List(pl.Int64),
  "total_xp": pl.List(pl.Float64),
  "neutral_kills": pl.List(pl.Float64),
  "tower_kills": pl.List(pl.Float64),
  "courier_kills": pl.List(pl.Float64),
  "hero_kills": pl.List(pl.Float64),
  "observer_kills": pl.List(pl.Float64),
  "sentry_kills": pl.List(pl.Float64),
  "roshan_kills": pl.List(pl.Float64),
  "necronomicon_kills": pl.List(pl.Float64),
  "ancient_kills": pl.List(pl.Float64),
  "buyback_count": pl.List(pl.Float64),
  "purchase_gem": pl.List(pl.Int32),
  "purchase_rapier": pl.List(pl.Int32),
  "team": pl.List(pl.Int64),
  "is_pick": pl.List(pl.Boolean),
  "hero_id": pl.List(pl.Int32),
  "name_right": pl.List(pl.String),
  "primary_attribute": pl.List(pl.Int32),
  "roles_vector": pl.List(pl.List(pl.Int32)),
  "hero_name": pl.List(pl.String),
  "start_date_time": pl.String,
  "patch": pl.Int64,
  "version": pl.Float64,
  "leaguename": pl.String,
  "tower_status_radiant": pl.String,
  "leagueid": pl.Int64,
  "date": pl.String,
  "dire_team_id": pl.Float64,
  "series_type": pl.Float32,
  "tower_status_dire": pl.String,
  "first_blood_time": pl.Int64,
  "dire_score": pl.Int64,
  "radiant_team_id": pl.Float64,
  "series_id": pl.String,
  "radiant_score": pl.Int64,
  "radiant_win": pl.Boolean,
  "barracks_status_radiant": pl.String,
  "tier": pl.String,
  "region": pl.String,
  "duration": pl.Int64,
  "barracks_status_dire": pl.String,
  "radiant_picks": pl.List(pl.Int32),
  "dire_picks": pl.List(pl.Int32),
  "radiant_bans": pl.List(pl.Int32),
  "dire_bans": pl.List(pl.Int32),
  "objectives": pl.List(pl.List(pl.String)),
  "exp_adv": pl.List(pl.Float64),
  "gold_adv": pl.List(pl.Float64),
})

heroes_schema = pl.Schema({
  "id": pl.Int64,
  "name": pl.String,
  "primary_attr": pl.String,
  "attack_type": pl.Int32,
  "roles": pl.List(pl.Int32),
  "base_health": pl.Int64,
  "base_health_regen": pl.String,
  "base_mana": pl.Int64,
  "base_mana_regen": pl.Float64,
  "base_armor": pl.Int64,
  "base_mr": pl.Int64,
  "base_attack_min": pl.Int64,
  "base_attack_max": pl.Int64,
  "base_str": pl.Int64,
  "base_agi": pl.Int64,
  "base_int": pl.Int64,
  "str_gain": pl.Float64,
  "agi_gain": pl.Float64,
  "int_gain": pl.Float64,
  "attack_range": pl.Int64,
  "move_speed": pl.Int64,
  "day_vision": pl.Int64,
  "night_vision": pl.Int64,
  "localized_name": pl.String,
  "primary_attribute": pl.Int32,
  "hero_id": pl.Int32,
  "roles_vector": pl.List(pl.Int32),
  "hero_name": pl.String,
})

leagues_schema = pl.Schema({
  "leagueid": pl.Int64,
  "leaguename": pl.String,
  "tier": pl.String,
})

metadata_schema = pl.Schema({
  "match_id": pl.Int64,
  "barracks_status_dire": pl.String,
  "barracks_status_radiant": pl.String,
  "cluster": pl.Int64,
  "dire_score": pl.Int64,
  "duration": pl.Int64,
  "engine": pl.Int64,
  "first_blood_time": pl.Int64,
  "game_mode": pl.Int64,
  "human_players": pl.Int64,
  "leagueid": pl.Int64,
  "lobby_type": pl.Int64,
  "match_seq_num": pl.Int64,
  "negative_votes": pl.Float64,
  "positive_votes": pl.Float64,
  "radiant_score": pl.Int64,
  "radiant_win": pl.Boolean,
  "start_date_time": pl.String,
  "tower_status_dire": pl.String,
  "tower_status_radiant": pl.String,
  "version": pl.String,
  "replay_salt": pl.Float64,
  "series_id": pl.String,
  "series_type": pl.String,
  "patch": pl.Int64,
  "region": pl.String,
  "throw": pl.String,
  "loss": pl.String,
  "comeback": pl.String,
  "stomp": pl.String,
  "replay_url": pl.String,
  "dire_team_id": pl.String,
  "radiant_team_id": pl.String,
  "pre_game_duration": pl.String,
  "flags": pl.String,
  "radiant_logo": pl.String,
  "radiant_team_complete": pl.String,
  "dire_logo": pl.String,
  "dire_team_complete": pl.String,
  "radiant_captain": pl.String,
  "dire_captain": pl.String,
  "average_rank": pl.String,
})

patches_schema = pl.Schema({
  "patch": pl.Int64,
  "id": pl.Float64,
  "date": pl.String,
  "count": pl.Int64,
})

items_schema = pl.Schema({
    "id": pl.Int32,
    "name": pl.String,
})

schema: dict[str, Any] = {
  # "match_id": pl.Int64,
  # "account_id": pl.List(pl.Int32),
  "creeps_stacked": pl.List(pl.Int32),
  "camps_stacked": pl.List(pl.Int32),
  "rune_pickups": pl.List(pl.Int32),
  "firstblood_claimed": pl.List(pl.Int32),
  "towers_killed": pl.List(pl.Int32),
  "roshans_killed": pl.List(pl.Int32),
  "stuns": pl.List(pl.Float32),
  # "gold_t": pl.List(pl.List(pl.Int32)),
  # "lh_t": pl.List(pl.List(pl.Int32)),
  # "dn_t": pl.List(pl.List(pl.Int32)),
  # "xp_t": pl.List(pl.List(pl.Int32)),
  # "items": pl.List(pl.List(pl.Int32)),
  # "item_0": pl.List(pl.Int32),
  # "item_1": pl.List(pl.Int32),
  # "item_2": pl.List(pl.Int32),
  # "item_3": pl.List(pl.Int32),
  # "item_4": pl.List(pl.Int32),
  # "item_5": pl.List(pl.Int32),
  # "backpack": pl.List(pl.List(pl.Int32)),
  # "backpack_0": pl.List(pl.Int32),
  # "backpack_1": pl.List(pl.Int32),
  # "backpack_2": pl.List(pl.Int32),
  "item_neutral": pl.List(pl.Int32),
  "kills": pl.List(pl.Int32),
  "deaths": pl.List(pl.Int32),
  "assists": pl.List(pl.Int32),
  "last_hits": pl.List(pl.Int32),
  "denies": pl.List(pl.Int32),
  "gold_per_min": pl.List(pl.Int32),
  "xp_per_min": pl.List(pl.Int32),
  "level": pl.List(pl.Int32),
  "net_worth": pl.List(pl.Int32),
  "hero_damage": pl.List(pl.Int32),
  "tower_damage": pl.List(pl.Int32),
  "hero_healing": pl.List(pl.Int32),
  "total_gold": pl.List(pl.Int32),
  "total_xp": pl.List(pl.Int32),
  "neutral_kills": pl.List(pl.Int32),
  "tower_kills": pl.List(pl.Int32),
  "courier_kills": pl.List(pl.Int32),
  "hero_kills": pl.List(pl.Int32),
  "observer_kills": pl.List(pl.Int32),
  "sentry_kills": pl.List(pl.Int32),
  "roshan_kills": pl.List(pl.Int32),
  "necronomicon_kills": pl.List(pl.Int32),
  "ancient_kills": pl.List(pl.Int32),
  "buyback_count": pl.List(pl.Int32),
  "purchase_gem": pl.List(pl.Int32),
  "purchase_rapier": pl.List(pl.Int32),
  # "team": pl.List(pl.Int32),
  # "is_pick": pl.List(pl.Boolean),
  # "hero_id": pl.List(pl.Int32),
  # "primary_attribute": pl.List(pl.Int32),
  # "attack": pl.List(pl.Int32),
  # "roles_vector": pl.List(pl.List(pl.Int32)),
  # "hero_name": pl.List(pl.String),
  # "start_date_time": pl.String,
  # "patch": pl.Int32,
  # "version": pl.Int32,
  "leaguename": pl.String,
  # "tower_status_radiant": pl.String,
  # "leagueid": pl.Int32,
  # "date": pl.String,
  # "dire_team_id": pl.Int32,
  # "series_type": pl.Int64,
  # "tower_status_dire": pl.String,
  # "first_blood_time": pl.Int32,
  # "dire_score": pl.Int32,
  # "radiant_team_id": pl.Int32,
  # "series_id": pl.Int32,
  # "radiant_score": pl.Int32,
  # "radiant_win": pl.Boolean,
  # "barracks_status_radiant": pl.String,
  # "tier": pl.String,
  # "region": pl.Int32,
  # "duration": pl.Int32,
  # "barracks_status_dire": pl.String,

  # "objectives": pl.List(pl.List(pl.String)),
  # "exp_adv": pl.List(pl.Int32),
  # "gold_adv": pl.List(pl.Int32),

  "radiant_picks": pl.List(pl.Int32),
  "dire_picks": pl.List(pl.Int32),
  "radiant_bans": pl.List(pl.Int32),
  "dire_bans": pl.List(pl.Int32),

  "player_radiant_stats": pl.List(pl.List(pl.Float32)),
  "player_dire_stats": pl.List(pl.List(pl.Float32)),

  "radiant_roles_picks": pl.List(pl.List(pl.Int32)),
  "dire_roles_picks": pl.List(pl.List(pl.Int32)),

  "radiant_roles_bans": pl.List(pl.List(pl.Int32)),
  "dire_roles_bans": pl.List(pl.List(pl.Int32)),

  # "radiant_items": pl.List(pl.List(pl.Int32)),
  # "dire_items": pl.List(pl.List(pl.Int32)),

  # "radiant_backpack": pl.List(pl.List(pl.Int32)),
  # "dire_backpack": pl.List(pl.List(pl.Int32)),

  "radiant_attributes": pl.List(pl.Int32),
  "dire_attributes": pl.List(pl.Int32),

  "radiant_attack": pl.List(pl.Int32),
  "dire_attack": pl.List(pl.Int32),
}

target_dataset = pl.Schema(schema)